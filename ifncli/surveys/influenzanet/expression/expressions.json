{
    "$schema": "http://influenzanet.info/schemas/survey-engine/expressions/0.1",
    "engineVersion": "0.10",
    "expressions":{
        "IF": {
            "kind":"action",
            "description":"control flow implementing the typical if-else structure, if condtion evaluated to true then action is run, action_else otherwise",
            "params":[
                {"name":"condition", "description":"condition to check"},
                {"name":"action_true", "description":"action run if condition is true"},
                {"name":"action_else", "description":"action run if condition is not true"}                
            ]
        },
        "DO": {
            "description":"Performs a list of actions by iterating through the `actions` parameters. This function can be used to group actions together as a defined list of arguments.",
            "kind":"action",
            "params":[{"name":"actions", "variadic": true}]
        },
        "IFTHEN": {
            "description":"perform a list of actions if condition is evaluated to `true`",
            "kind":"action",
            "params":[
                {"name": "condition", "description":"condition to check"}, 
                {"name":"actions", "variadic":true, "description":"actions to run if condition is evaluated to true"}
            ]
        },
        "UPDATE_FLAG": {
            "description":"Updates one flag of the participant state.",
            "kind":"action",
            "params":[
                {"name":"key", "role":"flag_key", "description":"name of the flag"}, 
               { "name": "value", "description":"value to assign to the flag"}
            ]
        },
        "REMOVE_FLAG": {
            "description":"Remove one flag of the participant state.",
            "kind":"action",
            "params":[{"name":"key", "role":"flag_key"}]
        },
        "UPDATE_STUDY_STATUS": {
            "description": "Updates the status of the participant (e.g. from active to inactive).",
            "kind":"action",
            "params":[{"name": "status", "role":"study_status"}]
        },
        "ADD_NEW_SURVEY": {
            "kind":"action",
            "description":"assign a new survey to the participant",
            "params": [
                {"name":"survey", "role":"survey_key"}
            ]
        },
        "REMOVE_ALL_SURVEYS": {
            "kind":"action",
            "description":"Remove all survey assigned to a participant",
            "params": [],
            "comment": "No argument"
        },
        "REMOVE_SURVEY_BY_KEY": {
            "kind":"action",
            "description":"Remove survey assigned to a participant by key",
            "params":[
                {"name": "key", "role":"survey_key"},
                {"name":"position", "role": "position"}
            ]
        },
        "REMOVE_SURVEYS_BY_KEY": {
            "description": "Removes all surveys with the specified key in the list of assigned surveys of the participant state.",
            "kind":"action",
            "params":[
                {"name": "survey", "role":"survey_key"}
            ]
        },
        "ADD_REPORT": {
            "kind":"action",
            "description": "Add response item to the response object",
            "params": [
                {"name":"item_key", "role":"item_key"}
            ]
        },
        "REMOVE_ALL_REPORTS": {
            "kind":"action",
            "description":"Remove all reports in response object",
            "params": [],
            "comment":"No argument"
        },
        "REMOVE_REPORT_BY_KEY": {
            "params": [
                {"name":"item", "role":"item_key"},
                {"name":"position", "role":"position"}
            ],
            "kind":"action"
        },
        "REMOVE_REPORTS_BY_KEY": {
            "params":[ {"name":"item", "role":"item_key"}],
            "kind":"action"
        },
        "LAST_RESPONSES_BY_KEY": {},
        "ALL_RESPONSES_SINCE": {},
        "RESPONSES_SINCE_BY_KEY": {},
        "GET_LAST_SURVEY_ITEM": {},
        "checkEventType": {
            "description":"Checks if the latest event is of the same type as specified in the parameter expression.",
            "kind":"action",
            "params":[
                {"name":"type", "role": "event_type"}
            ]
        },
        "checkConditionForOldResponses": {
            "description": "Evaluates the specified condition on old responses",
            "params": [
                {"name":"condition", "description":"condition to check"},
                {"name":"check", "description":"check mode for the condtion to match on the found old responses, `all` (true if all match), `any` (true if any old response match)  or a postive number (at least N match the condition)"},
                {"name":"survey", "role":"survey_key", "optional": true},
                {"name": "since", "role":"timestamp", "optional": true, "description":"timestamp to filter for responses that were submitted after this date"},
                {"name": "until", "role":"timestamp", "optional": true, "description": "timestamp to filter for responses that were submitted before this date"}
            ]
        },
        "checkResponseValueWithRegex": {
            "description":"Check if a response match the pattern",
            "params": [
                {"name":"item", "role":"item_key"},
                {"name":"response", "role":"rg_full_path"},
                {"name":"pattern"}
            ],
            "roles": [
                {"role":"item_path", "params": {"item_key": "item", "path": ["response"]} }
            ]
        },
        "checkSurveyResponseKey": {
            "description": "Checks if a survey key match the one of the survey submitted during the latest event of the participant",
            "params": [
                {"name":"survey", "role":"survey_key"} 
            ]
        },
        "countResponseItems": {
            "description": "Counts the number of selected response items of a response group.",
            "params": [
                {"name":"item", "role":"item_key"},
                {"name":"rg", "role":"rg_key"}
            ],
            "roles": [
                {"role":"item_path", "params": {"item_key": "item", "path": ["rg"]} }
            ]
        },
        "responseHasKeysAny": {
            "description": "checks if the participant has selected any of the specified item keys.",
            "params": [
                {"name":"item", "role":"item_key"},
                {"name":"rg", "role":"rg_comp_prefix"},
                {"name":"component", "role":"rg_comp_key"}
            ],
            "roles": [
                {"role": "item_path", "params": {"item_key": "item", "path": ["rg","component"]}}
            ]
        },
        "responseHasOnlyKeysOtherThan": {
            "description": "checks if the participant has selected none of the specified response item keys.",
            "params": [
                {"name":"item", "role":"item_key"},
                {"name":"rg", "role":"rg_comp_prefix"},
                {"name":"component", "role":"rg_comp_key", "variadic": true}
            ],
            "roles": [
                {"role": "item_path", "params": {"item_key": "item", "path": ["rg", "component"]}}
            ]
        },
        "getResponseValueAsNum": {
            "description": "returns the entered numerical value of the specified response group item.",
            "params": [
                {"name":"item", "role":"item_key"},
                {"name":"rg", "role":"rg_key"}
            ],
            "roles": [
                {"role": "item_path", "params": {"item_key": "item", "path": ["rg"]}}
            ]
        },
        "getResponseValueAsStr": {
            "description": "returns the entered string value of the specified response group item.",
            "params": [
                {"name":"item", "role":"item_key"},
                {"name":"rg", "role":"rg_key"}
            ],
            "roles": [
                {"role": "item_path", "params": {"item_key": "item", "path": ["rg"]} }
            ]
        },
        "getStudyEntryTime": {
            "description": "returns the time (as posix time stamp) the participant entered the study",
            "params": []
        },
        "hasSurveyKeyAssigned": {
            "description": "checks if the specified survey key is included in the keys of the surveys assigned to the participant.",
            "params": [
                {"name":"survey", "role":"survey_key"}
            ]
        },
        "getSurveyKeyAssignedFrom": {
            "description": "returns the date when the specified survey was assigned to the participant as posix timestamp.",
            "params": [
                {"name":"survey", "role":"survey_key"}
            ]
        },
        "getSurveyKeyAssignedUntil": {
            "description": "returns the date when the specified survey was assigned to the participant as posix timestamp.",
            "params": [
                {"name":"survey", "role":"survey_key"}
            ]
        },
        "hasStudyStatus": {
            "description": "checks if the participant has the specified status",
            "params": [
                {"name":"status", "role":"participant_status"}
            ]
        },
        "hasParticipantFlag": {
            "description": "checks if the participant has the specified flag",
            "params": [
                {"name":"flag", "role":"flag_key"}
            ]
        },
        "lastSubmissionDateOlderThan": {
            "description": "checks if the participant has the specified flag",
            "params": [
                {"name":"time", "role":"timestamp"},
                {"name":"survey", "role":"survey_key"}
            ]
        },
        "eq": [],
        "lt": [],
        "lte": [],
        "gt": [],
        "gte": [],
        "or": [],
        "and": [],
        "not": [],

        "getArrayItemAtIndex": {
            "kind": "client",
            "params": [
                {"name": "array"},
                {"name":"index"}
            ]
        },
        "getArrayItemByKey": {
            "kind":"client",
            "params": [
                {"name": "array"},
                {"name":"key"}
            ]
        },
        "getAttribute": {
            "kind":"client",
            "params":[
                {"name":"item_key", "role":"item_key"},
                {"name": "name"}
            ]
        },
        "getObjByHierarchicalKey": {
            "kind":"client",
            "params": [
                {"name":"item"},
                {"name":"key"}
            ],
            "refs": [
                {"role":"item_path", "params": {"item_key": "item", "path": ["key"]}}
            ]
        },
        "getContext": [],
        "getResponseItem": {
            "params":[
                {"name":"item_key", "role":"item_key"},
                {"name": "response", "role":"rg_full_path"}
            ],
            "refs": [
                {"role":"item_path", "params": {"item_key": "item", "path": ["response"]}}
            ]
        },
        "getSurveyItemValidation":{
            "params":[
                {"name":"item_key", "role":"item_key", "allow_this": true},
                {"name":"validation", "role":"validation_key"}
            ],
            "refs": [
                {"role":"validation_path", "params": {"item_key": "item", "path": ["response"]}}
            ]
            
        },
        "getPreviousResponses": {
            "params": [
                {"name": "key", "role":"item_key"}
            ]
        },
        "getResponses": {
            "kind": "client",
            "params": []
        },
        "getRenderedItems": {
            "kind": "client",
            "params": []
        },
        "hasResponse": {
           "params": [ 
             {"name":"item", "role":"item_key"},
             {"name":"response", "role": "rg_key"}
           ],
           "roles": [
               {"role": "item_path", "params":{"item_key": "item", "path": ["response"]}}
           ]
        },
        "isDefined": {
            "params": [
                {"name":"var"}
            ]
        },
        "sequential":[],
        "getSecondsSince": {
            "params": [
                {"name":"time", "role":"timestamp"}
            ]
        },
        "timestampWithOffset":{
            "params": [
                {"name": "offset", "role":"timestamp"},
                {"name": "ref", "role":"timestamp"}
            ]
        },
        "dateResponseDiffFromNow": {
            "params":[
                {"name":"item_key", "role":"item_key"},
                {"name": "response", "role":"rg_full_path"},
                {"name": "unit", "optional": true, "role":"time_unit"},
                {"name": "unsigned", "optional":true}
            ],
            "refs": [
                {"role":"item_path", "params": {"item_key": "item", "path": ["response"]}}
            ]
        }
    },
    "enums": {
        "event_type": [
            "SUBMISSION",
            "TIMER",
            "ENTER"
        ],
        "position": [
            "first",
            "last"
        ],
        "participant_status": [
            "active", 
            "inactive", 
            "paused", 
            "finished"
        ],
        "time_unit":[
            "seconds", "minutes", "hours", "days", "weeks", "months", "years",
            "y", "M", "w", "d", "h", "m",  "s", "ms"
        ]
    }
}